---
interface Props {
  items: {
    text: string;
    href?: string;
  }[];
}

const { items } = Astro.props;
---

<nav aria-label="Breadcrumb" class="bg-gray-50 border-b border-gray-200">
  <div class="max-w-6xl mx-auto px-4">
    <ol class="flex items-center h-12 space-x-2 text-sm">
      <li>
        <a href="/" class="text-gray-500 hover:text-blue-600">
          <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
            <path d="M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z"/>
          </svg>
        </a>
      </li>
      {items.map((item, index) => (
        <>
          <li>
            <svg class="w-4 h-4 text-gray-400" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"/>
            </svg>
          </li>
          <li>
            {item.href ? (
              <a 
                href={item.href}
                class="text-gray-500 hover:text-blue-600"
                {...index === items.length - 1 && { 'aria-current': 'page' }}
              >
                {item.text}
              </a>
            ) : (
              <span 
                class="text-gray-900 font-medium"
                aria-current="page"
              >
                {item.text}
              </span>
            )}
          </li>
        </>
      ))}
    </ol>
  </div>
</nav> 