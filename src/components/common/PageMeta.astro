---
import { generateSEOMeta } from '../../utils/seo';

interface Props {
  title: string;
  description: string;
  type?: 'website' | 'article' | 'service';
  image?: string;
  path: string;
  publishedTime?: string;
  modifiedTime?: string;
  schema?: object | object[];
}

const { 
  title,
  description,
  type = 'website',
  image = '/images/og-image.jpg',
  path,
  publishedTime,
  modifiedTime,
  schema
} = Astro.props;

const seoMeta = generateSEOMeta({
  title,
  description,
  type,
  image,
  path,
  publishedTime,
  modifiedTime
});
---

<!-- Primary Meta Tags -->
<title>{seoMeta.title}</title>
<meta name="title" content={seoMeta.title} />
<meta name="description" content={seoMeta.description} />

<!-- Canonical URL -->
<link rel="canonical" href={seoMeta.canonical} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content={seoMeta.og.type} />
<meta property="og:url" content={seoMeta.og.url} />
<meta property="og:title" content={seoMeta.og.title} />
<meta property="og:description" content={seoMeta.og.description} />
<meta property="og:image" content={seoMeta.og.image} />
<meta property="og:site_name" content={seoMeta.og.siteName} />
{seoMeta.og.publishedTime && (
  <meta property="article:published_time" content={seoMeta.og.publishedTime} />
)}
{seoMeta.og.modifiedTime && (
  <meta property="article:modified_time" content={seoMeta.og.modifiedTime} />
)}

<!-- Twitter -->
<meta name="twitter:card" content={seoMeta.twitter.card} />
<meta name="twitter:url" content={seoMeta.twitter.url} />
<meta name="twitter:title" content={seoMeta.twitter.title} />
<meta name="twitter:description" content={seoMeta.twitter.description} />
<meta name="twitter:image" content={seoMeta.twitter.image} />
<meta name="twitter:site" content={seoMeta.twitter.site} />

<!-- Structured Data -->
{schema && (
  <script type="application/ld+json" set:html={JSON.stringify(schema)} />
)} 